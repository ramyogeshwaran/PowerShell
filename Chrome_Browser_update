# Define paths
$chromeInstaller = "C:\temp\chrome_123.exe"
$machineListFile = "C:\temp\Computers.txt"
$outputReport = "C:\temp\Chrome_Install_Report.csv"

# Chrome required version
$requiredVersion = [version]"135.0.7049.114"

$machineList = Get-Content -Path $machineListFile


$report = @()


function Get-ChromeVersionFromFileRemote {
    param (
        [string]$computerName
    )

    $chromePaths = @(
        "\\$computerName\C$\Program Files\Google\Chrome\Application\chrome.exe",
        "\\$computerName\C$\Program Files (x86)\Google\Chrome\Application\chrome.exe"
    )

    foreach ($path in $chromePaths) {
        if (Test-Path $path) {
            $fileVersionInfo = [System.Diagnostics.FileVersionInfo]::GetVersionInfo($path)
            return [version]$fileVersionInfo.ProductVersion
        }
    }
    return $null
}


function Upgrade-ChromeRemote {
    param (
        [string]$computerName
    )

    
    Invoke-Command -ComputerName $computerName -ScriptBlock {
        if (!(Test-Path "C:\Temp")) {
            New-Item -Path "C:\" -Name "Temp" -ItemType Directory | Out-Null
        }
    } -ErrorAction SilentlyContinue

    # Copy chrome installer
    Copy-Item -Path $chromeInstaller -Destination "\\$computerName\C$\Temp\chrome.exe" -Force -ErrorAction Stop

    # Run chrome installer silently
    Invoke-Command -ComputerName $computerName -ScriptBlock {
        Start-Process -FilePath "C:\Temp\chrome.exe" -ArgumentList "/silent /install" -Wait
    } -ErrorAction Stop
}

foreach ($machine in $machineList) {
    Write-Output "Processing $machine..."

    if (Test-Connection -ComputerName $machine -Count 2 -Quiet) {
        try {
            $chromeVersion = Get-ChromeVersionFromFileRemote -computerName $machine

            if ($chromeVersion -eq $null) {
                Write-Output "$machine Chrome not installed."
                $status = "Chrome not installed"
            }
            elseif ($chromeVersion -lt $requiredVersion) {
                Write-Output "$machine Chrome version $chromeVersion is outdated. Upgrading..."

                try {
                    Upgrade-ChromeRemote -computerName $machine
                    $status = "Upgraded Chrome from version $chromeVersion"
                } catch {
                    Write-Output "$machine Error during Chrome upgrade - $_"
                    $status = "Failed to upgrade Chrome from version $chromeVersion"
                }
            }
            else {
                Write-Output "$machine Chrome version $chromeVersion is up-to-date."
                $status = "Chrome up-to-date (Version $chromeVersion)"
            }
        } catch {
            Write-Output "$machine Error during checking - $_"
            $status = "Error during checking"
        }
    } else {
        Write-Output "$machine Offline"
        $status = "Machine Offline"
    }

   
    $report += [PSCustomObject]@{
        MachineName = $machine
        Status      = $status
    }
}

$report | Select-Object MachineName, Status | Export-Csv -Path $outputReport -NoTypeInformation -Force

Write-Output "Done! Report saved to $outputReport"
